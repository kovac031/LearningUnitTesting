@using PagedList
@using PagedList.Mvc

@using PlayPalMini.Model
@using PlayPalMini.MVC.Models

@model StaticPagedList<BoardGameView>

@{
    ViewBag.Title = "GetAllBoardGamesAsync";
}

<h2>Board Games</h2>
@if (User.IsInRole("Administrator"))
{
    <p>
        <a href="@Url.Action("CreateBoardGameAsync", "BoardGame")"
           style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 16px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
           onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Add New Board Game</a>
    </p>
}


@using (Html.BeginForm("GetAllBoardGamesAsync", "BoardGame", FormMethod.Get))
{
    <div>
        <label for="filterBy">Filter by:</label>
        <input type="text" name="filterBy" value="@ViewBag.CurrentFilter" />
        <input type="submit" value="Filter" />
        @if (!string.IsNullOrEmpty(ViewBag.CurrentFilter))
        {
            <a href="@Url.Action("GetAllBoardGamesAsync", "BoardGame")">Clear filter</a>
        }
    </div>
}

<style>
    /* Custom CSS class for the table headers */
    .table-header {
        color: black;
        text-decoration: none;
    }
</style>

<table class="table">
    <thead>
        <tr>
            <th>
                <a href="@Url.Action("GetAllBoardGamesAsync", new { sorting = ViewBag.SortByTitle, filterBy = ViewBag.CurrentFilter, page = ViewBag.CurrentPage })" class="table-header">
                    Title @if (ViewBag.SortByTitle == "")
                    {
                        <span>↑</span>
                    }
                    else if (ViewBag.SortByTitle == "title_desc")
                    {
                        <span>↓</span>
                    }
                </a>
            </th>
            <th>
                <a href="@Url.Action("GetAllBoardGamesAsync", new { sorting = ViewBag.SortByRating, filterBy = ViewBag.CurrentFilter, page = ViewBag.CurrentPage })" class="table-header">
                    Rating @if (ViewBag.SortByRating == "rating_asc")
                    {
                        <span>↑</span>
                    }
                    else if (ViewBag.SortByRating == "rating_desc")
                    {
                        <span>↓</span>
                    }
                </a>
            </th>
            <th>Description</th>
            @if (User.IsInRole("Administrator"))
            {
                <th>CreatedBy</th>
                <th>DateCreated</th>
                <th>UpdateBy</th>
                <th>DateUpdated</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.AvgRating)</td>
                <td>
                    @{
                        string truncate = item.Description;
                        if (truncate.Length > 50)
                        {
                            truncate = truncate.Substring(0, 50) + "...";
                        }
                    }
                    @Html.DisplayFor(modelItem => truncate)
                </td>

                @if (User.IsInRole("Administrator"))
                {
                    <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.DateCreated)</td>
                    <td>@Html.DisplayFor(modelItem => item.UpdatedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.DateUpdated)</td>
                }

                <td>
                    <a href="@Url.Action("GetSpecificBoardGameAsync", "BoardGame", new { id = item.Id })"
                       style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                       onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Details</a>
                </td>

                @if (User.IsInRole("Administrator"))
                {
                    <td>
                        <a href="@Url.Action("EditBoardGameAsync", "BoardGame", new { id = item.Id })"
                           style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                           onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Edit</a>
                    </td>
                    <td>
                        <a href="@Url.Action("DeleteBoardGameAsync", "BoardGame", new { id = item.Id })"
                           style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                           onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@if (Model.PageCount > 1)
{
    <div class="pager">
        @Html.PagedListPager(Model, page => Url.Action("GetAllBoardGamesAsync", new { page, filterBy = ViewBag.CurrentFilter, sorting = ViewBag.CurrentSort }),
                new PagedListRenderOptions()
    {
        Display = PagedListDisplayMode.IfNeeded,
        DisplayPageCountAndCurrentLocation = false,
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        UlElementClasses = new[] { "custom-pager" }
    })

        <style>
            .custom-pager li a {
                background-color: #f2f2f2;
                color: #333;
                padding: 4px 8px;
                font-size: 14px;
                border: 1px solid #ccc;
                border-radius: 8px;
                cursor: pointer;
                text-decoration: none;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                margin: 4px 2px;
            }

            .custom-pager {
                list-style-type: none;
                display: flex;
                flex-direction: row;
                gap: 0.1rem;
            }

            .custom-pager li a:hover {
                background-color: #dcdcdc;
            }
            .custom-pager li a.active-page {
                background-color: #dcdcdc; 
            }

        </style>

    </div>

}

@section Scripts 
{
    <script> // dodao da oboja page na kojem se nalazim
        $(document).ready(function() {
            var currentPage = @Model.PageNumber;
            $(".custom-pager li a").each(function(index) {
                // dodas 1 jer pocinje od 0 za prvi button (kod mene <<), 1 za drugi button (kod mene <) i 2 nam treba za prvi page kod mene
                if (index === currentPage + 1) {
                    $(this).addClass('active-page');
                }
            });
        });
    </script>
}
