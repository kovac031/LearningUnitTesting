@using PagedList
@using PagedList.Mvc

@using PlayPalMini.Model
@using PlayPalMini.MVC.Models

@model StaticPagedList<ReviewView>

@{
    ViewBag.Title = "GetAllReviewsAsync";
}

<h2>All reviews overview</h2>
@if (User.IsInRole("Administrator"))
{
    <style>
        /* Custom CSS class for the table headers */
        .table-header {
            color: black;
            text-decoration: none;
        }
    </style>
    <table class="table">
        <tr>
            <th>
                Title
            </th>
            <th>
                Comment
            </th>
            <th>
                <a href="@Url.Action("GetAllReviewsAsync", new { sorting = ViewBag.SortByRating, page = ViewBag.CurrentPage })" class="table-header">
                    Rating @if (ViewBag.SortByRating == "rating_asc")
                    {
                        <span>↑</span>
                    }
                    else if (ViewBag.SortByRating == "rating_desc")
                    {
                        <span>↓</span>
                    }
                </a>
            </th>
            @if (User.IsInRole("Administrator"))
            {
                <th>BoardGameId</th>
                <th>
                    <a href="@Url.Action("GetAllReviewsAsync", new { sorting = ViewBag.SortByUser, page = ViewBag.CurrentPage })" class="table-header">
                        Rated by @if (ViewBag.SortByUser == "")
                        {
                            <span>↑</span>
                        }
                        else if (ViewBag.SortByUser == "user_desc")
                        {
                            <span>↓</span>
                        }
                    </a>
                </th>
                <th>DateCreated</th>
                <th>UpdatedBy</th>
                <th>DateUpdated</th>
                <th>RegisteredUserId</th>
            }
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @{
                        string truncate = item.Comment;
                        if (truncate.Length > 50)
                        {
                            truncate = truncate.Substring(0, 50) + "...";
                        }
                    }
                    @Html.DisplayFor(modelItem => truncate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                @if (User.IsInRole("Administrator"))
                {
                    <td>@Html.DisplayFor(modelItem => item.BoardGameId)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.DateCreated)</td>
                    <td>@Html.DisplayFor(modelItem => item.UpdatedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.DateUpdated)</td>
                    <td>@Html.DisplayFor(modelItem => item.RegisteredUserId)</td>
                }
                <td>
                    <a href="@Url.Action("GetOneReviewAsync", "Review", new { id = item.Id })"
                       style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                       onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Details</a>
                </td>
                <td>
                    <a href="@Url.Action("EditReviewAsync", "Review", new { id = item.Id })"
                       style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                       onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Edit</a>
                </td>
                <td>
                    <a href="@Url.Action("DeleteReviewAsync", "Review", new { id = item.Id })"
                       style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                       onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Delete</a>
                </td>
            </tr>
        }

    </table>

    if (Model.PageCount > 1)
    {
        <div class="pager">
            @Html.PagedListPager(Model, page => Url.Action("GetAllReviewsAsync", new { page, sorting = ViewBag.CurrentSort }),
                                             new PagedListRenderOptions()
                                             {
                                                 Display = PagedListDisplayMode.IfNeeded,
                                                 DisplayPageCountAndCurrentLocation = false,
                                                 DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                                 DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                                 DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                                 DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                                 UlElementClasses = new[] { "custom-pager" }
                                             })

            <style>
                .custom-pager li a {
                    background-color: #f2f2f2;
                    color: #333;
                    padding: 4px 8px;
                    font-size: 14px;
                    border: 1px solid #ccc;
                    border-radius: 8px;
                    cursor: pointer;
                    text-decoration: none;
                    text-align: center;
                    text-decoration: none;
                    display: inline-block;
                    margin: 4px 2px;
                }

                .custom-pager {
                    list-style-type: none;
                    display: flex;
                    flex-direction: row;
                    gap: 0.1rem;
                }

                    .custom-pager li a:hover {
                        background-color: #dcdcdc;
                    }
            </style>

        </div>

    }
}
else
{
    <p>You are not an administrator.</p>
}