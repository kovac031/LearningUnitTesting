@using PagedList
@using PagedList.Mvc

@using PlayPalMini.Model
@using PlayPalMini.MVC.Models

@model StaticPagedList<ReviewView>

@{
    ViewBag.Title = "_GetReviewsForSpecificGameAsync";
}

<style>
    .table-header {
        color: black;
        text-decoration: none;
    }
</style>

<table class="table">
    <tr>
        <th>
            @*  partial view hendla sortiranje drukcije  *@
            <a href="javascript:void(0);" onclick="updatePartial('@ViewBag.SortByRating')" class="table-header">
                Rating @if (ViewBag.SortByRating == "rating_asc")
                {
                    <span>↑</span>
                }
                else if (ViewBag.SortByRating == "rating_desc")
                {
                    <span>↓</span>
                }
            </a>
        </th>
        <th>Title</th>
        <th>Comment</th>
        <th>
            <a href="javascript:void(0);" onclick="updatePartial('@ViewBag.SortByUser')" class="table-header">
                Rated by @if (ViewBag.SortByUser == "")
                {
                    <span>↑</span>
                }
                else if (ViewBag.SortByUser == "user_desc")
                {
                    <span>↓</span>
                }
            </a>
        </th>
        @if (User.IsInRole("Administrator"))
        {
            <th>BoardGameId</th>
            <th>UpdatedBy</th>
            <th>DateCreated</th>
            <th>DateUpdated</th>
            <th>RegisteredUserId</th>
        }
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Rating)</td>
            <td>@Html.DisplayFor(modelItem => item.Title)</td>
            @if (User.IsInRole("Administrator"))
            {
                <td>
                    @{
                        string truncate = item.Comment;
                        if (truncate.Length > 50)
                        {
                            truncate = truncate.Substring(0, 50) + "...";
                        }
                    }
                    @Html.DisplayFor(modelItem => truncate)
                </td>
            }
            else
            {
                <td>@Html.DisplayFor(modelItem => item.Comment)</td>
            }

            <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
            @if (User.IsInRole("Administrator"))
            {
                <td>@Html.DisplayFor(modelItem => item.BoardGameId)</td>
                <td>@Html.DisplayFor(modelItem => item.UpdatedBy)</td>
                <td>@Html.DisplayFor(modelItem => item.DateCreated)</td>
                <td>@Html.DisplayFor(modelItem => item.DateUpdated)</td>
                <td>@Html.DisplayFor(modelItem => item.RegisteredUserId)</td>
            }
            @if (User.IsInRole("Administrator") || User.Identity.Name == item.CreatedBy)
            {
                <td>
                    <a href="@Url.Action("GetOneReviewAsync", "Review", new { id = item.Id })"
                       style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                       onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Details</a>
                </td>
                <td>
                    <a href="@Url.Action("EditReviewAsync", "Review", new { id = item.Id })"
                       style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                       onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Edit</a>
                </td>
                <td>
                    <a href="@Url.Action("DeleteReviewAsync", "Review", new { id = item.Id })"
                       style="background-color: #f2f2f2; color: #333; padding: 4px 8px; font-size: 14px; border: 1px solid #ccc; border-radius: 8px; cursor: pointer; text-decoration: none;"
                       onmouseover="this.style.backgroundColor='#dcdcdc'" onmouseout="this.style.backgroundColor='#f2f2f2'">Delete</a>
                </td>
            }
        </tr>
    }

</table>

@if (Model.PageCount > 1)
{
    <div class="pager">
        <ul class="custom-pager">
            @if (Model.PageNumber > 1)
            {
                <li><a href="javascript:void(0);" onclick="updatePartial('@ViewBag.CurrentSort', @Math.Max(1, Model.PageNumber - 1))"> < </a></li>
            }
            @for (var i = 1; i <= Model.PageCount; i++)
            {
                <li>
                    <a href="javascript:void(0);" onclick="updatePartial('@ViewBag.CurrentSort', @i)"
                       class="@(i == Model.PageNumber ? "active-page" : "")">@i</a>
                </li>
            }
            @if (Model.PageNumber < Model.PageCount)
            {
                <li><a href="javascript:void(0);" onclick="updatePartial('@ViewBag.CurrentSort', @Math.Min(Model.PageCount, Model.PageNumber + 1))"> > </a></li>
            }
        </ul>
        <style>
            .custom-pager li a {
                background-color: #f2f2f2;
                color: #333;
                padding: 4px 8px;
                font-size: 14px;
                border: 1px solid #ccc;
                border-radius: 8px;
                cursor: pointer;
                text-decoration: none;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                margin: 4px 2px;
            }

            .custom-pager {
                list-style-type: none;
                display: flex;
                flex-direction: row;
                gap: 0.1rem;
            }

            .custom-pager li a:hover {
                background-color: #dcdcdc;
            }

            .custom-pager li a.active-page {
                background-color: #dcdcdc;
                color: #333;
            }
        </style>
    </div>
}
