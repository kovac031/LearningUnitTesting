@using X.PagedList
@using X.PagedList.Mvc.Core
@using Model
@using X.PagedList.Web.Common

@model StaticPagedList<StudentView>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    <p>
        @Html.ActionLink("Create New", "CreateStudent")
    </p>
    <!-- ------------------- FILTERING ----------------------- -->
    @using (Html.BeginForm("ListWithParams", "Student", FormMethod.Get))
    {
        <div>
            <input type="hidden" name="sortBy" value="@ViewBag.CurrentSort" />
            <input type="hidden" name="page" value="@ViewBag.CurrentPage" />
            <div>
                <label for="searchBy">Search from names and surnames:</label>
                <input type="text" name="searchBy" value="@ViewBag.SearchFilter" />
            </div>
            <div>
                <label for="dobMin">Date of Birth From:</label>
                <input type="date" name="dobMin" value="@(ViewBag.DobMin != null ? ((DateTime)ViewBag.DobMin).ToString("yyyy-MM-dd") : "")" />

                <label for="dobMax">Date of Birth To:</label>
                <input type="date" name="dobMax" value="@(ViewBag.DobMax != null ? ((DateTime)ViewBag.DobMax).ToString("yyyy-MM-dd") : "")" />
            </div>
            <div>
                <label for="regMin">Date Registered On starting from:</label>
                <input type="date" name="regMin" value="@(ViewBag.RegMin != null ? ((DateTime)ViewBag.RegMin).ToString("yyyy-MM-dd") : "")" />

                <label for="regMax">Date Registered On up to:</label>
                <input type="date" name="regMax" value="@(ViewBag.RegMax != null ? ((DateTime)ViewBag.RegMax).ToString("yyyy-MM-dd") : "")" />

            </div>
            <input type="submit" value="Filter" />
            @if (!string.IsNullOrEmpty(ViewBag.SearchFilter) || ViewBag.DobMin != null || ViewBag.DobMax != null || ViewBag.RegMin != null || ViewBag.RegMax != null)
            {
                <a href="@Url.Action("ListWithParams", "Student")">Clear filter</a>
            }
        </div>
    }
    <!-- ------------------------------------------------------- -->

    <table class="table">
        <tr>
            <th>
                Id
            </th>
            <th>
                <a href="@Url.Action("ListWithParams",
                                    new {   sortBy = ViewBag.SortByFirstName,
                                            dobMin = ViewBag.DobMin, dobMax = ViewBag.DobMax,
                                            regMin = ViewBag.RegMin, regMax = ViewBag.RegMax,
                                            page = ViewBag.CurrentPage } )" class="table-header">
                    FirstName @if (ViewBag.SortByFirstName == "name_asc")
                    {
                        <span>↑</span>
                    }
                    else if (ViewBag.SortByFirstName == "name_desc")
                    {
                        <span>↓</span>
                    }
                </a>
            </th>
            <th>
                <a href="@Url.Action("ListWithParams",
                                    new {   sortBy = ViewBag.SortByLastName,
                                            dobMin = ViewBag.DobMin, dobMax = ViewBag.DobMax,
                                            regMin = ViewBag.RegMin, regMax = ViewBag.RegMax,
                                            page = ViewBag.CurrentPage } )" class="table-header">
                    LastName @if (ViewBag.SortByLastName == "surname_asc")
                    {
                        <span>↑</span>
                    }
                    else if (ViewBag.SortByLastName == "surname_desc")
                    {
                        <span>↓</span>
                    }
                </a>
            </th>
            <th>
                <a href="@Url.Action("ListWithParams",
                                    new {   sortBy = ViewBag.SortByDob,
                                            dobMin = ViewBag.DobMin, dobMax = ViewBag.DobMax,
                                            regMin = ViewBag.RegMin, regMax = ViewBag.RegMax,
                                            page = ViewBag.CurrentPage } )" class="table-header">
                    DateOfBirth @if (ViewBag.SortByDob == "dob_asc")
                    {
                        <span>↑</span>
                    }
                    else if (ViewBag.SortByDob == "dob_desc")
                    {
                        <span>↓</span>
                    }
                </a>
            </th>
            <th>
                EmailAddress
            </th>
            <th>
                <a href="@Url.Action("ListWithParams",
                                    new {   sortBy = ViewBag.SortBySignUp,
                                            dobMin = ViewBag.DobMin, dobMax = ViewBag.DobMax,
                                            regMin = ViewBag.RegMin, regMax = ViewBag.RegMax,
                                            page = ViewBag.CurrentPage } )" class="table-header">
                    RegisteredOn @if (ViewBag.SortBySignUp == "signup_asc")
                    {
                        <span>↑</span>
                    }
                    else if (ViewBag.SortBySignUp == "")
                    {
                        <span>↓</span>
                    }
                </a>
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegisteredOn)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditStudent", new { id = item.Id }) |
                    @Html.ActionLink("GetOneById", "GetOneStudent", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "DeleteStudent", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

    @if (Model.PageCount > 1)
    {
        <div class="pager">
            @Html.PagedListPager(Model, page => Url.Action("ListWithParams",
        new
        {
        page,
        sortBy = ViewBag.CurrentSort,
        dobMin = ViewBag.DobMin,
        dobMax = ViewBag.DobMax,
        regMin = ViewBag.RegMin,
        regMax = ViewBag.RegMax
        }),
        new PagedListRenderOptions()
        {
        Display = PagedListDisplayMode.IfNeeded,
        DisplayPageCountAndCurrentLocation = false,
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always
        })
        </div>
    }
</body>
</html>